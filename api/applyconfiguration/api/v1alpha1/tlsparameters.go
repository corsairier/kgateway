// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	apiv1alpha1 "github.com/kgateway-dev/kgateway/v2/api/v1alpha1"
)

// TLSParametersApplyConfiguration represents a declarative configuration of the TLSParameters type for use
// with apply.
type TLSParametersApplyConfiguration struct {
	MinVersion   *apiv1alpha1.TLSVersion `json:"minVersion,omitempty"`
	MaxVersion   *apiv1alpha1.TLSVersion `json:"maxVersion,omitempty"`
	CipherSuites []string                `json:"cipherSuites,omitempty"`
	EcdhCurves   []string                `json:"ecdhCurves,omitempty"`
}

// TLSParametersApplyConfiguration constructs a declarative configuration of the TLSParameters type for use with
// apply.
func TLSParameters() *TLSParametersApplyConfiguration {
	return &TLSParametersApplyConfiguration{}
}

// WithMinVersion sets the MinVersion field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the MinVersion field is set to the value of the last call.
func (b *TLSParametersApplyConfiguration) WithMinVersion(value apiv1alpha1.TLSVersion) *TLSParametersApplyConfiguration {
	b.MinVersion = &value
	return b
}

// WithMaxVersion sets the MaxVersion field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the MaxVersion field is set to the value of the last call.
func (b *TLSParametersApplyConfiguration) WithMaxVersion(value apiv1alpha1.TLSVersion) *TLSParametersApplyConfiguration {
	b.MaxVersion = &value
	return b
}

// WithCipherSuites adds the given value to the CipherSuites field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the CipherSuites field.
func (b *TLSParametersApplyConfiguration) WithCipherSuites(values ...string) *TLSParametersApplyConfiguration {
	for i := range values {
		b.CipherSuites = append(b.CipherSuites, values[i])
	}
	return b
}

// WithEcdhCurves adds the given value to the EcdhCurves field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the EcdhCurves field.
func (b *TLSParametersApplyConfiguration) WithEcdhCurves(values ...string) *TLSParametersApplyConfiguration {
	for i := range values {
		b.EcdhCurves = append(b.EcdhCurves, values[i])
	}
	return b
}
